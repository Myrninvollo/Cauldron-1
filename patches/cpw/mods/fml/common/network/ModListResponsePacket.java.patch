--- ../src-base/minecraft/cpw/mods/fml/common/network/ModListResponsePacket.java
+++ ../src-work/minecraft/cpw/mods/fml/common/network/ModListResponsePacket.java
@@ -126,8 +126,12 @@
         if (missingClientMods.size()>0 || versionIncorrectMods.size() > 0)
         {
             pkt.data = FMLPacket.makePacket(MOD_MISSING, missingClientMods, versionIncorrectMods);
-            Logger.getLogger("Minecraft").info(String.format("User %s connection failed: missing %s, bad versions %s", userName, missingClientMods, versionIncorrectMods));
-            FMLLog.info("User %s connection failed: missing %s, bad versions %s", userName, missingClientMods, versionIncorrectMods);
+            // Cauldron start - disable unneeded console spam
+            if (net.minecraftforge.cauldron.configuration.CauldronConfig.connectionLogging.getValue()) {
+                Logger.getLogger("Minecraft").info(String.format("User %s connection failed: missing %s, bad versions %s", userName, missingClientMods, versionIncorrectMods));
+                FMLLog.info("User %s connection failed: missing %s, bad versions %s", userName, missingClientMods, versionIncorrectMods);
+            }
+            // Cauldron end
             // Mark this as bad
             FMLNetworkHandler.setHandlerState((NetLoginHandler) netHandler, FMLNetworkHandler.MISSING_MODS_OR_VERSIONS);
             pkt.length = pkt.data.length;
@@ -136,8 +140,12 @@
         else
         {
             pkt.data = FMLPacket.makePacket(MOD_IDENTIFIERS, netHandler);
-            Logger.getLogger("Minecraft").info(String.format("User %s connecting with mods %s", userName, modVersions.keySet()));
-            FMLLog.info("User %s connecting with mods %s", userName, modVersions.keySet());
+            // Cauldron start - disable unneeded console spam
+            if (net.minecraftforge.cauldron.configuration.CauldronConfig.connectionLogging.getValue()) {
+                Logger.getLogger("Minecraft").info(String.format("User %s connecting with mods %s", userName, modVersions.keySet()));
+                FMLLog.info("User %s connecting with mods %s", userName, modVersions.keySet());
+            }
+            // Cauldron end
             pkt.length = pkt.data.length;
             network.addToSendQueue(pkt);
             NBTTagList itemList = new NBTTagList();
